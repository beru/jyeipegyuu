// This file was generated by WTL Dialog wizard 
// SettingView.h : Declaration of the CSettingView

#pragma once

#include "resource.h"       // main symbols
#include <atlcrack.h>
#include "fastdelegate.h"

struct Setting;
// CSettingView

class CSettingView : 
	public CDialogImpl<CSettingView>,
	public CWinDataExchange<CSettingView>	
{
	CUpDownCtrl m_wndSpinQpShift;
	CUpDownCtrl m_wndSpinQpRemain;
	CUpDownCtrl m_wndSpinHblockness;
	CUpDownCtrl m_wndSpinVblockness;
	CButton		m_wndButtonQuantizeMatrix;
	CButton		m_wndButtonReorderByFrequency;
	CButton		m_wndButtonEnableDCPrediction;
	CUpDownCtrl m_wndSpinZeroOneLimit;
	void OnSettingChange();
	
public:
	CSettingView();
	~CSettingView();
	enum { IDD = IDD_SETTING };

	BOOL PreTranslateMessage(MSG* pMsg);

    BEGIN_MSG_MAP(CSettingView)
		MESSAGE_HANDLER(WM_INITDIALOG, OnInitDialog)
		MSG_WM_COMMAND(OnCommand)
		MSG_WM_VSCROLL(OnVScroll)
    END_MSG_MAP()

	BEGIN_DDX_MAP(CSettingView)
		DDX_CONTROL_HANDLE(IDC_SPIN_QP_shift, m_wndSpinQpShift)
		DDX_CONTROL_HANDLE(IDC_SPIN_QP_remain, m_wndSpinQpRemain)
		DDX_CONTROL_HANDLE(IDC_SPIN_hBlockness, m_wndSpinHblockness)
		DDX_CONTROL_HANDLE(IDC_SPIN_vBlockness, m_wndSpinVblockness)
		DDX_CONTROL_HANDLE(IDC_CHECK_quantize_matrix, m_wndButtonQuantizeMatrix)
		DDX_CONTROL_HANDLE(IDC_CHECK_reorder_by_frequency, m_wndButtonReorderByFrequency)
		DDX_CONTROL_HANDLE(IDC_CHECK_enable_DC_prediction, m_wndButtonEnableDCPrediction)
		DDX_CONTROL_HANDLE(IDC_SPIN_zero_one_limit, m_wndSpinZeroOneLimit)
	END_DDX_MAP()
    // Handler prototypes:
    //  LRESULT MessageHandler(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
    //  LRESULT CommandHandler(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL& bHandled);
    //  LRESULT NotifyHandler(int idCtrl, LPNMHDR pnmh, BOOL& bHandled);
	LRESULT OnInitDialog(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
	LRESULT OnCommand(UINT codeNotify, int id, HWND hwndCtl);
	LRESULT OnVScroll(int code, short pos, HWND hwndCtl);

	fastdelegate::FastDelegate1<const Setting&> m_onSettingChangeDelegate;
};


